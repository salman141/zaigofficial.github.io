/* FILE: main/plugins/__jetpack.scss */

//
// Jetpack
//





// Related posts

	div#jp-relatedposts {

		.site & {
			border-color: inherit;
		}

		.jp-relatedposts-headline {
			@extend %font_weight_700;
		}

	}



// Sharing

	div.sharedaddy {
		margin-top: power( $golden, 2 ) +rem;
		border-color: inherit;

		.sd-title {
			@extend %font_size_1em;
			@extend %font_weight_700;
		}

		.site &:hover .sd-content ul li a.sd-button {
			opacity: .8;

			&:hover {
				opacity: 1;
			}

		}

		.fl-builder &,
		.content-layout-no-paddings & {
			/* $content_width */
			max-width: calc( #{ $golden_major } * #{ map_get( $customize_options, 'layout_width_content' ) } );
			max-width: calc( #{$golden_major} * var(--layout_width_content) );
			margin-left: auto;
			margin-right: auto;
		}

	}



	// Icon border in icons-only display

		.site .sd-social-icon .sd-content ul li[class*="share-"] {

			a,
			a:hover,
			div.option a {
				border-width: 2px;
				border-style: solid;
			}

			a.sd-button::before {
				top: 0;
			}

		}



// Widget: Blog Subscriptions

	.jetpack_subscription_widget {

		.fl-widget & {

			.widgettitle {
				@extend %font_size_1rem;
			}

		}

	}



// Content options

	// Author bio

		.entry-author {
			@extend %background_overlay_from_text_color;
			margin-top: power( 1 + $golden_minor, 4 ) +em;
			padding: 8%;
			border-width: 1px;
			border-style: solid;

			@include responsive( map_get( $breakpoint, 'xl' ) ) {
				padding: power( 1 + $golden_minor, 4 ) +em;
			}

			&::before {
				opacity: .03;
			}

			.author {

				&-avatar {
					width: 60 *$px;
					margin-bottom: 1em;

					@include responsive( map_get( $breakpoint, 'm' ) ) {
						float: $left; // {{RTL}}
						width: 80px;
						margin-#{$right}: $golden +em;
					}

				}

				&-title {
					@extend %font_size_small;
					@extend %font_weight_400;
					margin-bottom: $golden +em;
					text-transform: uppercase;
				}

				&-name {
					@extend %font_size_golden_rem;
					@extend %font_weight_700;
					display: block;
					margin-top: $golden_minor / 2 +em;
					text-transform: none;
				}

				&-bio {

					@include responsive( map_get( $breakpoint, 'm' ) ) {
						clear: both;
					}

				}

				&-link {
					display: block;
					margin-top: 1em;
				}

			}

			.fl-builder &,
			.content-layout-no-paddings & {
				/* $content_width */
				max-width: calc( #{ $golden_major } * #{ map_get( $customize_options, 'layout_width_content' ) } );
				max-width: calc( #{$golden_major} * var(--layout_width_content) );
				margin-left: auto;
				margin-right: auto;
			}

		}
