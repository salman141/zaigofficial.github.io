/* FILE: woocommerce/__helpers.scss */

//
// WooCommerce helper styles
//
// Mainly copies of extendable styles from main stylesheet.
// Have to prefix everything with `wc_` to prevent Prepros software
// from stacking styles across stylesheets.
//





// Animations

	@keyframes rotate {

		0% {
			transform: rotate(0deg);
		}

		100% {
			transform: rotate(359deg);
		}

	}



// Accessibility

	%wc_screen_reader_hiding {
		clip: rect( 1px, 1px, 1px, 1px );
		clip-path: inset( 50% );
		position: absolute !important;
		width: 1px;
		height: 1px;
		line-height: 1px;
		overflow: hidden;
	}

	%wc_screen_reader_hiding_disable {
		clip: auto !important;
		clip-path: none;
		position: static !important;
		height: auto;
		width: auto;
		line-height: normal;
		overflow: visible;
	}



// Icons

	%wc_genericon {
		font-family: 'Genericons-Neue';
		font-style: normal;
		font-weight: normal;
		font-variant: normal;
		text-decoration: inherit;
		text-transform: none;
		speak: none;
	}

	%wc_icon_vertical_align_middle {
		vertical-align: middle;
		transform: translateY(-6%);
	}

	%wc_indent_text_for_icon_only {
		position: relative;
		display: inline-block;
		width: 1em;
		text-align: $left; // {{RTL}}
		text-indent: -999em;

		&::before {
			@extend %wc_genericon;
			position: absolute;
			width: 100%;
			#{$left}: 0; // {{RTL}}
			top: 0;
			text-align: center;
			text-indent: 0;
		}

	}



// Typography

	%wc_break_words_disable {
		overflow-wrap: normal;
		word-wrap: normal;
		hyphens: manual;
	}



// Headings

	%wc_heading_uppercase {
		@extend %wc_uppercase_letter_spaced;
		font-weight: 700;
	}

	%wc_widget_title {
		@extend %wc_heading_uppercase;
		margin: 0 0 ( power( $golden, 2 ) +rem );
		line-height: 1 + $golden_minor;
		font-size: 1rem;
	}



// Layout

	%wc_clearfix {

		&::after {
			content: '';
			clear: both;
			display: table;
			table-layout: fixed;
		}

	}

	// From `main/base/__layout.scss`
	%wc_basic_width {
		width: 88%;
		margin: 0 auto;
	}

	%wc_max_width_1920 {
		max-width: 1920px;
		max-width: 1920 * $px;
	}

	/* $content_width */
	%wc_content_width {
		@extend %wc_basic_width;
		max-width: map_get( $customize_options, 'layout_width_content' );
		max-width: var(--layout_width_content);
	}

	%wc_full_width {
		@extend %wc_basic_width;
		@extend %wc_max_width_1920;
	}

	// From `main/content/__layout.scss`
	%wc_fullwidth_sections_layout {

		.site-content-inner {
			width: 100%;
			max-width: none;
			padding: 0;
		}

		.content-area {
			float: none;
			width: 100%;
			max-width: none;
			padding: 0;
			margin: 0;

			html & {
				// Unfortunately, we need to rise specificity for `max-width` due to possible IE shame styles overrides later.
				max-width: none;
			}

		}

	}

	%wc_horizontal_widget_area {
		display: flex;
		justify-content: space-between;
		flex-wrap: wrap;
		padding-top: $golden +em;
		padding-bottom: $golden +em;
		margin-left: -$golden +rem;
		margin-right: -$golden +rem;

		.widget {
			position: relative;
			flex: 1 1 10em;
			padding: ( $golden +em ) 0;
			margin: 0 ( $golden +rem );

			@include responsive( map_get( $breakpoint, 'l' ) ) {
				flex-basis: 0%;
				padding: ( power( $golden, 2 ) +em ) 0;
			}

		}

	}



// Decorations

	%wc_zigzag {
		position: relative;

		$zigzag_size: 1em;

		&::after,
		&::before {
			content: '';
			display: block;
			position: absolute;
			width: 100%;
			left: 0;
			top: -$zigzag_size / 2;
			height: $zigzag_size / 2;
			background-position: 0 100%;
			background-repeat: repeat-x;
			background-size: $zigzag_size $zigzag_size;
			opacity: $overlay_from_text_color_opacity;
		}

		&::after {
			background-position: 0 0;
			top: auto;
			bottom: -$zigzag_size / 2;
		}

	}



// Colors

	%wc_background_overlay_from_text_color_container {
		position: relative;
		z-index: 1; // Trick to keep pseudo element below child elements
	}

	%wc_background_overlay_from_text_color {
		@extend %wc_background_overlay_from_text_color_container;

		&::before {
			content: '';
			position: absolute;
			width: 100%;
			height: 100%;
			left: 0;
			top: 0;
			background-color: currentColor;
			border-radius: inherit;
			opacity: $overlay_from_text_color_opacity;
			z-index: -1; // Trick to keep pseudo element below child elements
		}

	}

	%wc_background_overlay_from_text_color_after {
		@extend %wc_background_overlay_from_text_color_container;

		&::after {
			content: '';
			position: absolute;
			width: 100%;
			height: 100%;
			left: 0;
			top: 0;
			background-color: currentColor;
			border-radius: inherit;
			opacity: $overlay_from_text_color_opacity;
			z-index: -1; // Trick to keep pseudo element below child elements
		}

	}



// Text styles

	%wc_uppercase_letter_spaced {
		text-transform: uppercase;
		letter-spacing: .075em;
	}
